# Source: jrest/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jrest-server
  labels:
    app.kubernetes.io/name: jrest
    app.kubernetes.io/instance: jrest
    app.kubernetes.io/version: "1.0.0"
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: jrest
      app.kubernetes.io/instance: jrest
  template:
    metadata:
      labels:
        app.kubernetes.io/name: jrest
        app.kubernetes.io/instance: jrest
    spec:
      securityContext:
        {}
      containers:
        - name: jrest
          securityContext:
            {}
          image: "test-harbor.apps.nonprod.ebt.bank/docker-proxy/emrahkk/jrest:v1.0.0-rc"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /ready
              port: http
          resources:
            {}
          volumeMounts:
            - name: data-volume
              mountPath: /usr/src/app/data            
      volumes:          
        - name: data-volume
          persistentVolumeClaim:
            claimName: jrest-pvc
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: jrest-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: nfs-storageclass
  volumeMode: Filesystem
